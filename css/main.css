/* УЗАГАЛЬНЕННЯ
 якщо у нас є щось однакове по зовнішньому виду, але
 розрізняється за дрібними модифікаціями то використовується
 "базовий стиль" + "додатковий" який його модифікує
 (перевизначає або доповнює базовий стиль) */

/* 1480(загальна ширина сторінки (контейнерів)) + падінг який ми додали
 для того щоб текст не прилипав до боків під час звуження сторніки
 1400 - 150 (умовна (з макету) ширина марджина між елементами) / 2
 (стовбчиків в контейнері на макеті) = ширина елемента.  */

/* цвет основного текста #000000 */
/* вторичный цвет текста  rgba(0, 0, 0, 0.8);
 */
/* белый #FFFFFF  */
/* акцент #18A0FB */
/* вторичный цвет фона #F5F5F5; */

:root {
  --primary-text-color: rgba(0, 0, 0, 0.8);
  --title-text-color: #000000;
  --accent-color: #18a0fb;
  --primary-white-color: #ffffff;
  --secondary-bg-color: #f5f5f5;
}

body {
  background-color: var(--primary-white-color);
  color: var(--primary-text-color);

  /* Після основногу шрифту обов'язково написати
  сімейство шрифтів на випадок (інтернет відвалився,
  файлікі не прийшли, шрифт не завантажився). Потрібно
  обрати будь-який котрий є на системі користувача 
  (без "засєчєк") sans-serif це універсальне запасне
  сімейство шрифтів */
  /*  Sans serif "без засєчєк"
      serif      "с засєчкамі"
      mono (mono space)  "коли потрібно описати код"
      обирати відповідно до основного (без, с, mono)   
      */
  /* Щоб зрозуміти якого типу шрифт можна або загуглити 
      або подивитись у зумі на шрифт. На ньому буквально видно
       засєчкі (Roman font) шрифт без засєчєк ще називають "рублений"
       Доручі на google fonts теж є */

  font-family: Montserrat, sans-serif;
  letter-spacing: -0.015em;
  font-size: 18px;
  line-height: 1.67;

  /* Наступним чином можна змінити всі або просто
  потрібні заголовки. Називається "Типографія" */

  /* h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: Comfortaa;
  } */
}

/* Утилиты */

/* ul {
  list-style: none;
} */

/* цим варіантом можна знести стиль сторінки (крапочки)
 з усіх ul елементів та у разі небхіодності додавати окремо,
 але наступний варіант більш гнучкий */
/* Утіліти (класси) які скидують покизники повинні бути вище тих котрі точково модифікують
інкше модифікації не спрацюють */
.list {
  padding: 0;
  margin: 0;
  list-style: none;
}

.container {
  margin-left: auto;
  margin-right: auto;
  padding-left: 20px;
  padding-right: 20px;
  /* лівий та правий padding даються щоб уникнути склеювання тексту та
  бокової рамки сторінки. Щоб між контентом та рамкою браузера був відступ */
  width: 1440px;
  outline: 2px solid slateblue;
}

/* Logo */

.logo {
  color: var(--title-text-color);
  /* Як і минулому випадку додадково додаємо сімейство шрифтів
  на випадок збою роботи сайту
    Comfortaa шрифт курсівний тож додаємо сімейство cursive  */
  font-family: Comfortaa, cursive;

  /* Перш за все вся ця хуйня береться з figma/code/css */

  /* font-style: normal; Писати не треба бо він й так 
       стоїть за замовчуванням (400)*/
  /* font-weight: normal;  те саме (400)
       якщо показник інший то треба писати
       ВАЖЛИВО вчитель каже,що font-weight: normal; хуіта 
       і треба писати число. Взагалі це та сам жирність шрифту
       100 - 900. Браузер іноді пропонує по дефолту іншу жирність
       тож є сенс перевіряти цей показник в insert/user agent stylesheet
       та у вкладці computed*/
  /* font size завжди повинен бути цілим числом (округляйя якщо треба) */
  font-size: 28px;
  /* line-height: 32px; Щоб дізназнатись цей показник треба
  32/28    line-height/font-size */
  line-height: 1.14;
  text-decoration: none;
  /* text-decoration: none; прибирає базове підкреслення посилань
  (лише посилань)  */
}

.logo:hover {
  color: var(--accent-color);
}

/* Site nav */

/* Тег button не наслідує головний шрифт font family
для того щоб кнопка унаслідувала шрифт потрібно зробити 
наступним чином
написати font-family: inherit; в селекторі
тобто 
button {
font-family: inherit;
}
 */

/* LESSON 6 */

.site-nav {
  display: flex;
  margin-left: 70px;
}

/* .site-nav .item{
  outline: 1px solid red;
  margin-right:  40px;
 } */

/* прибрали крайній марджин */
/* .site-nav .item:last-child{
  margin-right: 0;
 } */
/* або можна поставити всім крім останнього */
/* .site-nav .item:not(:last-child){
  margin-right: 40px;
 } */

/* Властивість виконується на тих елемнетах з классом item
  над котрими є елемент з классом item (відвовідно можна додати будь-який елемент) */

.site-nav .item + .item {
  margin-left: 40px;
}

.site-nav .link {
  display: block;
  padding-top: 21px;
  padding-bottom: 21px;

  color: var(--accent-color);

  font-weight: 500;
  font-size: 15px;
  line-height: 1.2;
  text-decoration: none;
}

.site-nav .link:hover,
.site-nav .link:focus {
  color: var(--title-text-color);
}

.auth-nav {
  display: flex;
  /* заповнив весь лівий margin */
  margin-left: auto;
}

.auth-nav .item + .item {
  padding-left: 12px;
}

.main-nav {
  display: flex;
  /* align-items: center; одне з властивостей для позиціювання елементів
   по вертикалі відносно горизонтальної осі у флекс боксі  */
  align-items: center;
  /* align-self: ; позиціонує елементи відповідно до осі вертикальної, тобто згори вниз */
}

/* Ми робимо селектор важкішим (спеціальність 0.0.2.0) для того щоб на поточній
сторінці слово-посилання було чорним перманентно */
/* "Ефект поточної сторінки" */
/* CSS файл піднаєднали до обох HTMLок (сторінок сайту) */
.site-nav .link.current {
  color: var(--title-text-color);
}

/* Index html */
/* <ul class="site-nav list">
          <li><a href="" class="link current">Features</a></li>
          <li><a href="" class="link">Preing</a></li>
          <li><a href="/Community.html" class="link">Community</a></li>
          <li><a href="" class="link">Support</a></li>
        </ul> */

/* HTML Community */
/* <ul class="site-nav list">
          <li><a href="" class="link">Features</a></li>
          <li><a href="" class="link">Preing</a></li>
          <li><a href="/Community.html" class="link current">Community</a></li>
          <li><a href="" class="link">Support</a></li>
        </ul> */

/* h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin-top: 0;
  margin-bottom: 0;
} */
/* приклад знесення зайвих (встановлених брузером) margin */

/* Hero */

.hero {
  text-align: center;
  /* всі текстові елементи блока успадковують центровку */
}

.hero-title {
  margin-top: 0;
  margin-bottom: 40px;
  /* зробили відступ заголовка від кнопки */
  color: var(--title-text-color);
  font-weight: 400;
  font-size: 56px;
  /* line-height при ділення округляється до сотих
  округляй правильно - третім числом до другого (тисячною до сотої) */
  line-height: 1.43;
  /* На макеті виdно що текст центрований тож вказуємо це відповідно
  якщо центрації не маємо то не копіюємо це з Figma */
  text-align: center;
  /* дорeчі кнопки (тег button) не центруються бо кнопка це не текст */
}

/* Section */

.section {
  /* Простір між секціями заповнюється padding а не margin
  щоб між ними не було білих зазорів */
  padding-top: 120px;
  padding-bottom: 120px;
}

/* Прибрали padding секції щоб він не відштовхував її від секції вище */
/* Тобто для секції вище ми зробили padding для того щоб відповідно
до макету її дистанціювати від контенту вище без допомоги margin тому що той
не можна зафарбувати, а для данної секції ми падінг прибираймо
 щоб він не створював зайву дистанцію */
.section.no-padding {
  padding-top: 0;
  padding-bottom: 0;
}

.section-title {
  color: var(--title-text-color);

  font-weight: 400;
  font-size: 48px;
  line-height: 1.5;
  /* можна центрувати всі потрібні заголовки 
  text-align: center; */

  margin-top: 0;
  margin-bottom: 60px;
  /* зробили відступ (відповідно до відступу на макеті) */
}

/* А можна центрувати елементи окремо */
.section-title.centered,
.section-description.centered {
  text-align: center;
}

.section-description {
  margin-top: 0;
  margin-bottom: 80px;
  font-size: 36px;
  line-height: 1.39;
}

/* Features и Examples */
/* Це теж саме що й якби ми встановили два окремих селектори */
.feature-list {
  display: flex;
  flex-wrap: wrap;
  margin: -40px -75px;
}

.feature-list .item {
  width: 625px;
  margin: 40px 75px;
}

.feature-list .title,
.work-list .title {
  color: var(--title-text-color);
  margin-bottom: 24;
  margin-top: 0;

  font-weight: 700;
  font-size: 24px;
  line-height: 1.5;
}

/* Works */
/* стрілочку поставили щоб зрозуміти що це селектор з ul на li */
/* тобто посилання з вкладення на вкладення */
.work-list > .item {
  display: flex;
  align-items: center;
  padding-top: 80px;
  padding-bottom: 80px;
  background-color: var(--primary-white-color);
}

/* принцип an+b (дивитись в read) */
.work-list > .item:nth-child(2n) {
  flex-direction: row-reverse;
  background-color: var(--secondary-bg-color);
  /* УВАГА режим екрану комфорт для глаз не бачить сірий колір */
}

.work-list > .item:nth-child(2n + 1) .content {
  margin-left: 84px;
}

.work-list > .item:nth-child(2n) .content {
  margin-right: 84px;
}

.feature-list p {
  margin-top: 0;
  margin-bottom: 32px;
}

/* Clients */

.client-list{
  display: flex;
  flex-wrap: wrap;
  width: 1200px; 
  margin: -30px -45px;
  margin-left: auto;
  margin-right: auto;
}

.client-list li{
  margin: 30px 45px;
  width: 173px;
}

/* Button */

.button {
  color: var(--title-text-color);
  background-color: var(--primary-white-color);
  /* додаємо до кнопок прозорий border для того щоб кнопки з кольоровим
  border не були більшими (в пікселях) за інші */
  border: 1px solid transparent;
  padding: 11px 34px;
  border-radius: 6px;
  display: inline-block;
  text-align: center;
  min-width: 130px;
  /* min-width це мінімальна ширина елемента , яка у разі додавання
  контенту (у нашому випадку тексту) робить елемент ширшим, а не
  переносить текст на інший рядок */

  font-weight: 500;
  font-size: 15px;
  line-height: 1.2;
  text-decoration: none;
}

.button.secondary {
  color: var(--accent-color);
  background-color: var(--primary-white-color);
  border-color: var(--accent-color);
}

.button.primary {
  color: var(--primary-white-color);
  background-color: var(--accent-color);
}

/* Footer */

.copyright {
  font-size: 15px;
  line-height: 1.6;
}

.social > .label {
  font-size: 15px;
  line-height: 1.6;
}

/* ...................................................... */

/* .test-container {
  width: 1230px;
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;
} */

/* .flex-container {
  display:flex;
  flex-wrap: wrap;
  background-color: aqua;
} */

/* calc((100% - кол-во маржинов в строке * значение маржина) / кол-во элементов в строке */
/* width: calc((100% - 60px) / 3); */
/* margin-right: 30px; */
/* margin-bottom: 30px; */

/* .flex-element {
  width: calc((100% - 60px) / 3); */
/* правильно записувати дріб до 4го знака */
/* width: 33.3333%; */
/* width: 380px; */
/* background-color: blue;
  margin-right: 30px;
  margin-bottom: 30px;
} */

/* Застосувати до кожного третього елемента */
/* .flex-element:nth-child(3n){
  margin-right: 0;
} */

/* АБО */

/* не застосовувати до кожного третього елемента */
/* .flex-element:not(nth-child(3n)) {
  margin-right: 30px;
} */

/* цей псевдоклас обирає останні три елементи. Таким самим чином можна
обрати +4,+5,+6 та іншу кількість останній елементів  */
/* .flex-element:nth-last-child(-n + 3){
  margin-bottom: 0;
} */

/* АБО */

/* застосувати до всіх крім останніх трьох */
/* .flex-element.flex-element:not(nth-child(-n + 3)){
  margin-bottom: 30px;
} */

/* Є секретна техніка ніндзюцу як зробити сітку у флекс бокс. Просто даєм елементам-дітям
половину запланованого марджина, а котейнеру марджин ставимо іншу зі знаком -. Крайні марджини 
з'їдає мінус, а маржини між елементами плюсуються. АЛЕ ця фішка працює тільки якщо не має фону.
Якщо фон є то марджини залазять на інші контейнери. АЛЕ якщо ми задаєм фон не флекс-контейнеру а 
секції то все буде заєбок. */
/* ...................................................... */
