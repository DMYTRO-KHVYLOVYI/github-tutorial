     
     
     У звичайних строчних та строчно-блочниї елементів (не у картинки) є справа "зазор" (порожнина) в 1/4 розмуру шрифта (це просто особливість), картинок зазор знизу.
Щоб це пофіксити в селектор картинки вкладається властивість display block.
     
      /* УВАГА режим екрану комфорт для глаз не бачить синій колір */
      ПАРСЕР - шматок програмного коду який відповідає за розбір твого текстового документу 
      <!--Якщо фото то jpeg, якщо Лого то SVG-->
      <!-- У SVG вже закладена ширина та висота-->
      <!-- У alt="" завжди повинно бути вказано, що конкретно намальовано -->
      <!-- <html lang="en"> Правило використання мови не можна порушувати бо машина читає лише тією мовою яку ти вказав,
       але можна в тегу вказувати мову якою машина його прочитає <h2 lang="ua">Приклад</h2> -->
      <!-- cntr z cntr y дія назад та вперед -->
      <!-- cntr / зробити коментар, перетворити код на коментар -->
      <!-- cntr shift x ти поставив як форматування -->
      <!-- <iframe>  ВИКОРИСТОВУЄТЬСЯ  ДЛЯ  ТОГО  ШОБ  ВЗЯТИ  КОНТЕНТ  З  ІНШОГО  СЕРВІСУ -->
      <!-- ВКЛАСТИ  В  ТВІЙ  HTML  ІНШИЙ HTML/  ВИКОРИСТОВУЄТЬСЯ ДУЖЕ РІДКО   БО
          НЕБЕСПЕЧНО   ВКЛАДАТИ  КОД    ІНШОГО    САЙТУ  В СВІЙ.  -->
      <!-- coloriz - розширення для підкрелення відповідним кольором хекса в ксс під час друкування -->

<!-- Якщо картка є посиланням на роботу автора то це <article> (незалежний елемент) -->
<!-- Якщо ні то можна вкласти в <div> (щоб візуально згрупувати) бо це не секція -->
<!-- <article> це незалежний шматочок сторінки який можна перемістити на інший сайт
     і не втратить свого сенсу (реклама, пост в твітері, сторіс з інсти) -->
    <section> частина сторінки яка втрачає сенс поміж контексту.

<!-- КАРТКА -->
        <div>
          <img
            src="/image/AnimeMan700x250.jpg"
            alt="animeman"
            width="700"
            height="250"
          />
          <h3>Sed out</h3>
          <p>fishtextfishtextfishtextfishtextfishtextfishtextfishtext</p>
        </div>

<!-- фільтри для контенту в мейні 2го макету це кнопки (для новачка), а точніше радіо кнопки -->
  <body>
    <header></header>
    <main>
      <section>
        <h1>Projects</h1>
        <div>
          <button type="button">кнопка</button>
          <button type="button">кнопка</button>
          <button type="button">кнопка</button>
          <button type="button">кнопка</button>
        </div>

<!-- Термін фігура - ілюстрації (приклад - графіки) -->



<!-- deploy  - доставка сайту на сервер -->
<!-- для хостингу Index.html повинен бути в корені папки -->

web devoleper це стек:
word press + php

front devoleper це:
html
JS
frame work
node

ШРИФТИ

<!-- Щоб визначити інтерліньяж шрифта (множник) потрібно font-height поділити на font-size (Figma) -->

   regular 400
   medium 500
   bold 700
   стандартні жирності шрифтів 

Потрібні тільки ті жирності які потрібні для макета (зазвичай це 100 400 500 700)
(якщо брати всі 100 - 900то сайт буде повільно завантажуватись) 
(шрифт довго підвантажувався в inspect (в мене горіло))

Не всі шрифти підтримують кирилицю

ПИТАННЯ ДО РОМАНА АНАТОЛІЧА
 google fonts дає на вибір або всю пачку жирності (+- 100-900), або можливість обрати лише одну конкретну.
 В знаятті N4  інтерфейс google fonts інший і в ньому можна обрати саме ті види жирності які тобі потрібні.
 УВАГА ПИТАННЯ! чого так йопта

system font stack - набір системних шрифтів (шрифти які гарантовано є на системі користувача)

Sans serif "без засєчєк"
serif      "с засєчкамі"
mono (mono space)  "коли потрібно описати код"     

вкладений в селектор код називається "свойство" (властивості)

УРОК 5

"Свойство" float - застаріла фігня яку, як каже вчитель, можна після курсу
за 20 хв знайти та зрозуміти самому.

display non
приховує елемент, вивільнює його місце та приховує навіть від "читалки" (indexації)
 
 
 БЛОЧНА МОДЕЛЬ  content (в середині блоку) - padding - border - margin

 content - те що всередині тегів, всередині блоку
 Елемент складається з рамки, падінга та контенту
 padding - відстань між контектом та його рамкою (border)
 border - рамка
 margin - відстань (відступ) між блоками

текст a.btn створює посилання з класом btn і тд... ))
<a href="" class="btn"></a>

 Доречі ось строчні елементи  
     <body> 
     <a href="/index.html">Обратно на главную</a> 
     <a href="" class="btn">Натисни на мене</a> 
     </body> 

    Оффтоп сdn посилання це коли файл скачується з найблищого серверу  
    
    modern-normalize css
    https://github.com/sindresorhus/modern-normalize
    css файл котрий уніфікує стилі з усіма браузерами
    (пан Роман сказав, що не суттєво)
    сdn посилання ставиться поверх всіх стилів
    можна подивитись в incert після підключення


/* Доречі ширина контейнеру для контенту сайта вимірюється в Figma
  за довомогою сітки в Desing */
Зазор між стовбчиками сітки в Figma називається gutter 
Зазвичай борти контейнер для контенту сайту є половиною gutter 
тобто якшо gutter 30 то борти (відступи щоб при стягуванні САЙТУ
текст не прилипав к стінкам браузера) 15.

margin не фарбується background color (бо це не тіло це відступ)

ПСЕВДОКЛАССИ 
:first-child
:last-child

.work-list > .item:nth-child(2n) {
  background-color: red;
}

принцип an+b (a та b задаєм ми)
 a = 2

 b = 1

 2n + 2

 n = 0

 2*0 + 2 = 3

 n = 2 

 2*2 + 2 =5

 n = 3

 2*3 + 2 = 7

 таким чином ми встановлюймо псевдоклас в селектор щоб обрати зі
 списку елементів тількі ті що нам потрібні.
Наприклад: Чотні 2n (або even) або не чотні 2n + 1 ( або odd)


   LESSON 6
На майбутнє рекомендується:
    не використовувати "составные" властивості бо їх потім неможливо перебити в JS

Стандарти padiing для посилань 40 px інакше людині важко на телефоні ткнути на нього.

властивості позиціювання елементів у флекс боксі: justify-content:

flex-start - елемнети притискаються до старту горизонтальної осі. Значення за замовчуванням.

flex-end - елемнти притискаються до кінця горизонтальної осі.

center - центрування по горизонтальній осі.

space between - перший елемент на почтку, сотанній в кінці, інші по середині.

space around - робить те саме,
 але робить з боків відступи в половину внутрішнього простору між елементами.

space evently - рівномірне позиціювання по горизонту.

/* align-self: ; позиціонує елементи відповідно осі вертикальної, тобто згори вниз */


Властивість flex-wrap:
За замовчуванням створює одностроковий контейнер, елементи будуть на одній строці,
але властивість довзволяє перетворити одностроковий контейнер на багатостроковий 

nowrap за замовчуванням

wrap строки скіпаються згори вниз

wrap-reverse знизу до гори 


Є секретна теїніка ніндзюцу як зробити сітку у флекс бокс. Просто даєм елементам-дітям
половину запланованого марджина, а котейнеру марджин ставимо іншу зі знаком -. Крайні марджини 
з'їдає мінус, а маржини між елементами плюсуються. АЛЕ ця фішка працює тільки якщо не має фону.
Якщо фон є то марджини залазять на інші контейнери. АЛЕ якщо ми задаєм фон не флекс-контейнеру а 
секції то все буде заєбок.


Flex-direction:

row - ось починається зліва на право. (стоїть за замовчуванням)
row-reverse - зправа на ліво
column ось починається зверху до низу
column-reverse знизу до верху
